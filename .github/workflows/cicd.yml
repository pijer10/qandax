name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest

    steps:
      # Checkout the code
      - name: Checkout code
        uses: actions/checkout@v3

      # Set up Python environment
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.9

      # - name: Install dependencies
      #   run: |
      #     pip install -r requirements.txt
      #     # Run tests if any
      #     pytest

      # Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Build and push Docker image
      - name: Build and Push Docker Image
        run: |
          IMAGE_NAME=docker.io/${{ secrets.DOCKER_USERNAME }}/qandax
          docker build -t $IMAGE_NAME:latest .
          docker push $IMAGE_NAME:latest

  # deploy:
  #   name: Deploy to Minikube via Argo CD
  #   needs: build
  #   runs-on: ubuntu-latest

  #   steps:
  #     # Checkout the repository
  #     - name: Checkout code
  #       uses: actions/checkout@v3

  #     # Set up kubectl for Minikube
  #     - name: Set up kubectl
  #       uses: azure/setup-kubectl@v3
  #       with:
  #         version: 'latest'

  #     # Configure kubeconfig for Minikube
  #     - name: Configure Minikube
  #       run: |
  #         echo "Setting up Minikube kubeconfig"
  #         mkdir -p ~/.kube
  #         cp /path/to/minikube-config ~/.kube/config

  #     # Apply Kubernetes manifests to Argo CD
  #     - name: Sync Application in Argo CD
  #       run: |
  #         kubectl apply -f argo-application.yaml
  #         argocd app sync my-app
